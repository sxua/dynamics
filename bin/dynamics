#!/usr/bin/env ruby

def create_scaffold(name)
  if File.exists?(name)    
    puts "Error, #{name} already exists!"
  else  
    Dir.mkdir(name)
    
    app_dir = File.join(name, 'app')    
    build_dir = File.join(name, 'build')      
    res_dir = File.join(name, 'resources')   
        
    Dir.mkdir(app_dir) 
    Dir.mkdir(build_dir)       
    Dir.mkdir(res_dir)   
              
    controllers_dir = File.join(app_dir, 'controllers')  
    models_dir = File.join(app_dir, 'models')  
    views_dir = File.join(app_dir, 'views')  
                    
    Dir.mkdir(controllers_dir)    
    Dir.mkdir(models_dir)    
    Dir.mkdir(views_dir)    
    
    base_dir = File.join(File.dirname(__FILE__), '..', 'base')
    
    f = File.new(File.join(controllers_dir, 'application_controller.rb'), 'w+')   
    f.write(render_code(File.join(base_dir, 'controllers', 'application_controller.rb'))) 
    f.close    
    
    f = File.new(File.join(name, 'Rakefile'), 'w+')   
    code = render_code(File.join(base_dir, 'Rakefile'))
    code.gsub!("app.name = ''", "app.name = '#{name}'")
    f.write(code) 
    f.close    
  end
end

def display_usage
  str = "Dynamics is a framework for RubyMotion.\n"
  str += "\n"
  str += "Usage:\n"
  str += "  dynamics [-h, --help]\n"
  str += "  dynamics <command> [<args...>]\n"
  str += "\n"
  str += "Commands:\n"
  str += "  create   Create a new project scaffold"
  puts str
end

def render_code(name)
    f = File.open(name)     
    content = f.read
    f.close
    content
end

i = 1
for arg in ARGV
  case i
     when 1 then command = arg
     when 2 then args = arg
     else command = '-h'
  end    
  i += 1
end
case command
   when '-h', '--help' then display_usage
   when 'create' then create_scaffold(args)
   else  display_usage
end  


